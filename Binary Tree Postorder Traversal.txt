Question:
	Given a binary tree, return the postorder traversal of its nodes' values.

		Example:
			Input: [1,null,2,3]
				   1
					\
					 2
					/
				   3

			Output: [3,2,1]
Approach:
	* Iterative
	/**
	 * Definition for a binary tree node.
	 * public class TreeNode {
	 *     int val;
	 *     TreeNode left;
	 *     TreeNode right;
	 *     TreeNode(int x) { val = x; }
	 * }
	 */
	class Solution {
		List<Integer> res = new ArrayList();
		public List<Integer> postorderTraversal(TreeNode root) {
			//helper(root);
			Stack<TreeNode> stack = new Stack<>();
			if(root == null)
				return res;
			
			stack.add(root);
			while(!stack.isEmpty()){
				TreeNode node = stack.pop();
				res.add(0, node.val);
				if(node.left != null)
					stack.add(node.left);
				if(node.right != null)
					stack.add(node.right);
			}
			return res;
		}
		//recursive
		public void helper(TreeNode node){
			if(node == null)
				return;
			helper(node.left);
			helper(node.right);
			res.add(node.val);
		}
	}